{"version":3,"sources":["Styled Components/DisplayGrid/index.js","Styled Components/CardFront/index.js","components/CardFront.js","Styled Components/CardBack/index.js","components/CardBack.js","Styled Components/DisplayGrid/Button/index.js","containers/preview.js","Styled Components/MainForm/index.js","Styled Components/MainForm/RenderSelectList/index.js","components/renderSelectList.js","components/renderField.js","components/renderAvatar.js","data.js","components/Mainform.js","containers/mainform.js","containers/DisplayGrid.js","Styled Components/index.js","App.js","serviceWorker.js","index.js","img/ID_back_chip.jpg","img/ID_bg_chip.jpg"],"names":["H1","styled","h1","_templateObject","Section","section","_templateObject2","PreviewWrapper","div","_templateObject3","Card","p","_templateObject4","_templateObject5","CardFrontWrapper","CardFront_templateObject","props","img","concat","bgImg","Content","CardFront_templateObject2","CardTitle","span","CardFront_templateObject3","col","row","Normal","CardFront_templateObject4","MiddleDiv","CardFront_templateObject5","FieldName","_templateObject6","width","FieldValue","_templateObject7","Img","_templateObject8","CardFront","_this$props","this","data","values","file","react_default","a","createElement","undefined","bgCardFrontUrl","map","fields","i","type","name","CardFront_Normal","key","toUpperCase","src","imagePreviewUrl","alt","Component","CardBackWrapper","CardBack_templateObject","UL","ul","CardBack_templateObject2","Li","li","CardBack_templateObject3","CardBack","bgCardBackUrl","react_barcode_default","value","format","height","Button","button","Button_templateObject","Preview","_this","Fragment","components_CardFront","Object","assign","ref","el","componentRef","lib_default","trigger","content","components_CardBack","componentRef1","Form","form","MainForm_templateObject","H1light","MainForm_templateObject2","RenderWrapper","MainForm_templateObject3","Label","label","MainForm_templateObject4","P","MainForm_templateObject5","Input","input","MainForm_templateObject6","Div","RenderSelectList_templateObject","LabelP","RenderSelectList_templateObject2","LabelSelect","RenderSelectList_templateObject3","renderSelectList","_ref","gender","item","htmlFor","Field","id","component","FormField","_ref$input","objectWithoutProperties","style","meta","error","AvatarWrapper","renderAvatar_templateObject","renderAvatar","handleFile","onChange","reduxForm","handleSubmit","reset","onSubmit","field","formField","onClick","connect","state","getFormValues","components_Mainform","DisplayGrid","bgCardBack","bgCardFront","e","reader","FileReader","newfile","target","files","targetName","console","log","onloadend","setState","result","readAsDataURL","mainform","preview","Wrapper","Styled_Components_templateObject","App","containers_DisplayGrid","Boolean","window","location","hostname","match","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.ff597e2f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const H1 = styled.h1`\n  text-align: center;\n  justify-items: center;\n  font-family: Concert One;\n  font-size: 3em;\n`;\n\nexport const Section = styled.section`\n  display: grid;\n  grid-template: \"form preview\";\n`;\n\nexport const PreviewWrapper = styled.div``;\n\nexport const Normal = styled.p`\n  display: flex;\n  margin: 10px;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  width: 500px;\n  height: 300px;\n  margin: 10px;\n  border: 1px solid grey;\n  border-radius: 5px;\n`;\n","import styled from \"styled-components\";\nimport bgImg from \"../../img/ID_back_chip.jpg\";\nimport { Card } from \"../DisplayGrid\";\n\nexport const CardFrontWrapper = styled(Card)`\n  background-image: ${props => props.img || `url(${bgImg})`};\n  background-repeat: no-repeat;\n  background-size: 100%;\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n\n  text-align: left;\n  flex-direction: column;\n`;\n\nexport const CardTitle = styled.span`\n  text-align: center;\n  justify-items: center;\n  font-size: 1.5em;\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  grid-column: ${props => props.col};\n  grid-row: ${props => props.row};\n`;\nexport const Normal = styled.p`\n  display: flex;\n  margin: 10px;\n  grid-column: ${props => props.col};\n  grid-row: ${props => props.row};\n`;\nexport const MiddleDiv = styled.div`\ngrid-row = ${props => props.row};\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport const FieldName = styled.span`\n  min-width: ${props => props.width || \"100px\"};\n  font-weight: 600;\n`;\nexport const FieldValue = styled.span`\n  flex-grow: 1;\n  text-align: right;\n  background-color: white;\n  justify-items: right;\n`;\nexport const Img = styled.img`\n  width: 115px;\n  height: 140px;\n  margin: 10px 20px;\n  border: 1px solid grey;\n  right: 0;\n  grid-column: ${props => props.col};\n  grid-row: ${props => props.row};\n`;\n","// @flow\nimport React, { Component } from \"react\";\n\nimport {\n  CardFrontWrapper,\n  Content,\n  CardTitle,\n  Normal,\n  FieldName,\n  FieldValue,\n  Img,\n  MiddleDiv\n} from \"../Styled Components/CardFront\";\n\ntype Props = {\n  data: Array<{\n    name: string,\n    label: string,\n    type: string,\n    gender?: $ReadOnlyArray<string>\n  }>,\n  values: {},\n  file: { file?: {}, imagePreviewUrl: string }\n};\n\nclass CardFront extends Component<Props> {\n  render() {\n    const { data, values, file } = this.props;\n    return (\n      <CardFrontWrapper\n        img={\n          file.bgCardFrontUrl !== undefined\n            ? `url(${file.bgCardFrontUrl})`\n            : null\n        }\n      >\n        <Content>\n          {data.map((fields, i) => {\n            if (fields.type === \"file\" && fields.name !== \"avatar\") {\n              return null;\n            } else {\n              return fields.name !== \"cardTitle\" &&\n                fields.name !== \"dob\" &&\n                fields.name !== \"sSN\" &&\n                fields.name !== \"avatar\" ? (\n                <Normal key={fields.name} row={fields.row} col={fields.col}>\n                  <FieldName>{fields.name.toUpperCase()}</FieldName>\n                  <FieldValue>\n                    {values !== undefined && values[fields.name]}\n                  </FieldValue>\n                </Normal>\n              ) : fields.name !== \"avatar\" && fields.name !== \"cardTitle\" ? (\n                <MiddleDiv row={`item${i + 1}`} col=\"2/4\" key={fields.name}>\n                  <Normal row={fields.row} col={fields.col}>\n                    <FieldName width=\"50px\">\n                      {fields.name.toUpperCase()}\n                    </FieldName>\n                    <FieldValue>\n                      {values !== undefined && values[fields.name]}\n                    </FieldValue>\n                  </Normal>\n                </MiddleDiv>\n              ) : fields.name !== \"cardTitle\" ? (\n                <Img\n                  src={file.imagePreviewUrl}\n                  alt=\"avatar\"\n                  key={fields.name}\n                  row={fields.row}\n                  col={fields.col}\n                />\n              ) : (\n                <CardTitle key={fields.name} row=\"1\" col=\"1/3\">\n                  {values !== undefined ? values[fields.name] : \"Card Title\"}\n                </CardTitle>\n              );\n            }\n          })}\n        </Content>\n      </CardFrontWrapper>\n    );\n  }\n}\n\nexport default CardFront;\n","import styled from \"styled-components\";\nimport { Card } from \"../DisplayGrid\";\nimport bgImg from \"../../img/ID_bg_chip.jpg\";\n\nexport const CardBackWrapper = styled(Card)`\n  display: grid;\n  text-align: center;\n  justify-items: center;\n  background-image: ${props => props.img || `url(${bgImg})`};\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-color: #dae3fa96;\n  background-blend-mode: luminosity;\n`;\n\nexport const UL = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n`;\n\nexport const Li = styled.li`\n  font-size: 0.75em;\n  margin-right: 15px;\n  list-style-type: decimal;\n`;\n","import React, { Component } from \"react\";\nimport Barcode from \"react-barcode\";\nimport { CardBackWrapper, UL, Li } from \"../Styled Components/CardBack\";\n\nclass CardBack extends Component {\n  render() {\n    const { file } = this.props;\n    return (\n      <CardBackWrapper\n        img={\n          file.bgCardBackUrl !== undefined ? `url(${file.bgCardBackUrl})` : null\n        }\n      >\n        <UL>\n          <Li>FirstName</Li>\n          <Li>LastName</Li>\n          <Li>Date of Birth</Li>\n          <Li>Social Security Number</Li>\n          <Li>Date of Issue</Li>\n          <Li>Date of Expire</Li>\n        </UL>\n        <Barcode value=\"1234567890\" format=\"CODE128\" height={40} />\n        <p>NOT VALID AS A TRAVEL DOCUMENT</p>\n      </CardBackWrapper>\n    );\n  }\n}\n\nexport default CardBack;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin: 20px 0;\n  max-width: 200px;\n  padding: 15px 20px;\n  border-radius: 15px;\n  color: black;\n  background-color: transparent;\n  box-sizing: none;\n  border: 2px solid black;\n  box-shadow: none;\n  cursor: pointer;\n  font-size: 1.2em;\n  display: inline-block;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n","import React, { Component } from \"react\";\nimport ReactToPrint from \"react-to-print\";\n\nimport CardFront from \"../components/CardFront\";\nimport CardBack from \"../components/CardBack\";\n\nimport { Button } from \"../Styled Components/DisplayGrid/Button\";\n\nclass Preview extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CardFront {...this.props} ref={el => (this.componentRef = el)} />\n        <ReactToPrint\n          trigger={() => <Button>Print Front Part</Button>}\n          content={() => this.componentRef}\n        />\n        <CardBack {...this.props} ref={el => (this.componentRef1 = el)} />\n        <ReactToPrint\n          trigger={() => <Button>Print Back Part</Button>}\n          content={() => this.componentRef1}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preview;\n","import styled from \"styled-components\";\nimport { H1 } from \"../DisplayGrid\";\n\nexport const Form = styled.form`\n  display: grid;\n  background: #ffffffce;\n  background-repeat: no-repeat;\n  background-position-y: 79%;\n  background-size: 100%;\n  width: 90%;\n  height: 760px;\n  overflow-y: auto;\n  text-align: left;\n  margin: 12px auto;\n  padding: 20px;\n  box-shadow: 1px 1px 4px 0px #c5bdbd;\n`;\nexport const H1light = styled(H1)`\n  grid-column: 2 span;\n  color: #84837c;\n  font-size: 2em;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n`;\nexport const RenderWrapper = styled.div`\n  grid-column: 2 span;\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\nexport const Label = styled.label`\n  color: #84837c;\n`;\nexport const P = styled.p`\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid darkkhaki;\n  flex-grow: 1;\n  font-size: 1.3em;\n  color: #611103;\n  text-align: right;\n  margin-left: 15px;\n`;\n","import styled from \"styled-components\";\nimport { P } from \"../../MainForm\";\n\nexport const Div = styled.div`\n  margin: 10px;\n`;\n\nexport const LabelP = styled(P)`\n  margin-top: 0px;\n  color: #84837c;\n  font-weight: 600;\n`;\n\nexport const LabelSelect = styled.label`\n  margin: 10px;\n`;\n","// @flow\nimport React from \"react\";\nimport { Field } from \"redux-form\";\nimport type { FieldProps } from \"redux-form\";\n\nimport {\n  Div,\n  LabelP,\n  LabelSelect\n} from \"../Styled Components/MainForm/RenderSelectList\";\n\ntype Props = FieldProps & {\n  gender: string[],\n  style: {},\n  label: string,\n  type: string,\n  key: string\n};\nconst renderSelectList = ({ gender, label, type, key }: Props) => (\n  <Div key={key}>\n    <LabelP>{label}:</LabelP>\n    {gender !== undefined &&\n      gender.map(item => (\n        <React.Fragment key={item}>\n          <LabelSelect htmlFor={item}>\n            <Field\n              id={item}\n              name=\"gender\"\n              component=\"input\"\n              type={type}\n              value={item}\n            />\n            {item}\n          </LabelSelect>\n        </React.Fragment>\n      ))}\n  </Div>\n);\n\nexport default renderSelectList;\n","// @flow\nimport React from \"react\";\nimport { RenderWrapper, Label, P, Input } from \"../Styled Components/MainForm\";\n\ntype Props = {\n  input: { value: {}, name: string },\n  type: string,\n  label: string,\n  style: {},\n  key: string\n};\nconst FormField = ({\n  input: { value: originalVal, ...input } = { value: \"\" },\n  type,\n  label,\n  style,\n  key,\n  meta: { error }\n}: Props) => {\n  const { name } = input;\n  return (\n    <RenderWrapper style={style} key={key}>\n      <P>\n        <Label htmlFor={name}>{label}:</Label>\n      <Input {...input} type={type} name={name} id={name} />\n      </P>\n      {/* <span>{error && console.log(error)}</span> */}\n    </RenderWrapper>\n  );\n};\n\nexport default FormField;\n","// @flow\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { RenderWrapper, Label, P } from \"../Styled Components/MainForm\";\n\nconst AvatarWrapper = styled(RenderWrapper)`\n  display: grid;\n  grid-column: ${props => props.col};\n`;\n\ntype Props = {\n  input: { value: {}, name: string },\n  type: string,\n  label: string,\n  handleFile: () => mixed\n};\ntype State = {\n  file: string\n};\nclass renderAvatar extends Component<Props, State> {\n  render() {\n    const {\n      input: { name },\n      label,\n      type,\n      col,\n      handleFile\n    } = this.props;\n    return name === \"avatar\" ? (\n      <AvatarWrapper key={name} col=\"2\">\n        <Label htmlFor={name}>\n          {label}:\n          <P>\n            <input type={type} name={name} id={name} onChange={handleFile} />\n          </P>\n        </Label>\n      </AvatarWrapper>\n    ) : (\n      <AvatarWrapper key={name} col={col}>\n        <Label htmlFor={name}>\n          {label}:\n          <P>\n            <input type={type} name={name} id={name} onChange={handleFile} />\n          </P>\n        </Label>\n      </AvatarWrapper>\n    );\n  }\n}\n\nexport default renderAvatar;\n","const data = [\n  { name: \"cardTitle\", label: \"Card Title\", type: \"text\" },\n  {\n    name: \"firstName\",\n    label: \"First Name\",\n    type: \"text\",\n    col: \"1\",\n    row: \"2\"\n  },\n  {\n    name: \"lastName\",\n    label: \"Last Name\",\n    type: \"text\",\n    row: \"3\",\n    col: null\n  },\n  {\n    name: \"dob\",\n    label: \"Date of Birth\",\n    type: \"date\",\n    col: \"2/4\",\n    row: null\n  },\n  {\n    name: \"sSN\",\n    label: \"Social Security Number\",\n    type: \"text\",\n    col: \"2/4\",\n    row: null\n  },\n  {\n    name: \"doi\",\n    label: \"Date of Issue\",\n    type: \"date\",\n    row: \"6\",\n    col: null\n  },\n  {\n    name: \"doe\",\n    label: \"Date of Expiry\",\n    type: \"date\",\n    row: \"7\",\n    col: null\n  },\n  {\n    name: \"gender\",\n    label: \"Gender\",\n    type: \"radio\",\n    gender: [\"Male\", \"Female\", \"InterSex\"],\n    row: \"8\",\n    col: null\n  },\n  {\n    name: \"avatar\",\n    label: \"Avatar\",\n    type: \"file\",\n    col: \"2\",\n    row: \"1/6\"\n  },\n  {\n    name: \"bgCardFront\",\n    label: \"Background Image Front\",\n    type: \"file\",\n    col: \"1\"\n  },\n  {\n    name: \"bgCardBack\",\n    label: \"Background Image Back\",\n    type: \"file\",\n    col: \"2\"\n  }\n];\n\nexport default data;\n","// @flow\nimport React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport type { FormProps } from \"redux-form/lib/types\";\n\nimport renderSelectList from \"./renderSelectList\";\nimport formField from \"./renderField\";\nimport renderAvatar from \"./renderAvatar\";\nimport { default as data } from \"../data\";\n// import { validate } from '../utl/validation';\n\nimport { Form, H1light } from \"../Styled Components/MainForm\";\nimport { Button } from \"../Styled Components/DisplayGrid/Button\";\n\ntype Props = FormProps;\n\nconst RenderMainform = (props: Props) => {\n  const { handleSubmit, reset } = props;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <H1light> Information Form</H1light>\n      {data.map(field => {\n        if (field.type === \"file\") {\n          return (\n            <Field\n              name={field.name}\n              label={field.label}\n              component={renderAvatar}\n              type={field.type}\n              key={field.name}\n              col={field.col}\n              {...props}\n            />\n          );\n        } else {\n          switch (field.name) {\n            case \"gender\":\n              return (\n                <Field\n                  name={field.name}\n                  label={field.label}\n                  component={renderSelectList}\n                  gender={field.gender}\n                  type={field.type}\n                  key={field.name}\n                />\n              );\n            default:\n              return (\n                <Field\n                  key={field.name}\n                  name={field.name}\n                  label={field.label}\n                  component={formField}\n                  type={field.type}\n                  {...props}\n                />\n              );\n          }\n        }\n      })}\n      <Button onClick={reset}>Clear Form</Button>\n    </Form>\n  );\n};\n\nexport default reduxForm({\n  form: \"mainform\"\n})(RenderMainform);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getFormValues } from 'redux-form';\n\nimport RenderMainForm from '../components/Mainform';\n\ntype State = {\n  FirstName: string,\n  LastName: string,\n  DateofBirth: Date,\n  SocialSecurityNumber: mixed,\n  DateofIssue: Date,\n  DateofExpiry: Date,\n  Gender: string[],\n  data: {},\n};\ntype Props = {};\n\nconst Mainform = (props: Props) => (\n  <React.Fragment>\n    <RenderMainForm {...props} handleSubmit={() => {}} />\n  </React.Fragment>\n);\n\nconst mapStateToProps = (state: State) => ({\n  data: getFormValues('mainform')(state),\n});\n\nexport default connect(mapStateToProps)(Mainform);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues } from \"redux-form\";\n\nimport Preview from \"./preview\";\nimport MainForm from \"./mainform\";\nimport { default as data } from \"../data\";\nimport { H1, Section, PreviewWrapper } from \"../Styled Components/DisplayGrid\";\n\nclass DisplayGrid extends Component {\n  state = {\n    file: null,\n    bgCardBack: null,\n    bgCardFront: null,\n    imagePreviewUrl: \"\"\n  };\n\n  handleFile = e => {\n    const reader = new FileReader();\n    const newfile = e.target.files[0];\n    const targetName = e.target.name;\n    console.log(targetName);\n    reader.onloadend = () => {\n      targetName === \"avatar\"\n        ? this.setState({ file: newfile, imagePreviewUrl: reader.result })\n        : targetName === \"bgCardFront\"\n        ? this.setState({\n            bgCardFront: newfile,\n            bgCardFrontUrl: reader.result\n          })\n        : this.setState({\n            bgCardBack: newfile,\n            bgCardBackUrl: reader.result\n          });\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <H1>ID Card Maker</H1>\n        <Section>\n          <MainForm onSubmit={() => {}} handleFile={this.handleFile} />\n          <PreviewWrapper>\n            <Preview {...this.props} data={data} file={this.state} />\n          </PreviewWrapper>\n        </Section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  values: getFormValues(\"mainform\")(state)\n});\n\nexport default connect(mapStateToProps)(DisplayGrid);\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\n","// @flow\nimport React from \"react\";\nimport DisplayGrid from \"./containers/DisplayGrid\";\nimport { Wrapper } from \"./Styled Components\";\n\nconst App = () => (\n  <Wrapper>\n    <DisplayGrid />\n  </Wrapper>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { reducer as reduxForm } from 'redux-form';\n\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*eslint-disable */\nconst store = createStore(\n  combineReducers({ form: reduxForm }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ID_back_chip.c154ab0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ID_bg_chip.5add7502.jpg\";"],"sourceRoot":""}